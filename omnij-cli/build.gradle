// Work-in-progress support for building CLI tools
plugins {
    id 'application'
}

sourceCompatibility = 11
targetCompatibility = 11

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    implementation project(':omnij-rpc')
    implementation "${consensusjGroup}:${consensusjBtcCliArtifact}:${consensusjVersion}"
}

application {
    mainClass = 'foundation.omni.cli.ConsensusCLI'
    applicationName = 'ConsensusCLI'
}

run {
    args = ['-regtest', '-rpcwait', '-rpcconnect=127.0.0.1', "-property=1"]
}

jar {
    manifest {
        attributes 'Implementation-Title': 'BTC/OMNI Status',
                'Implementation-Version': archiveVersion.get(),
                'Main-Class': application.mainClass
    }
}

// Test Structure
sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        java {
            srcDir 'src/integ/java'
        }
        groovy {
            srcDir 'src/integ/groovy'
        }
        resources {
            srcDir 'src/integ/resources'
        }
    }
}

task regTest(type: Test) {
    useJUnitPlatform()
    testClassesDirs = project.sourceSets.integrationTest.output.classesDirs
    classpath = project.sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    testLogging.showStandardStreams = true
    beforeSuite { descriptor ->
        if (descriptor.getClassName() != null) {
            logger.lifecycle('\033[1m' + descriptor.getName() + "\033[0m") // bold
        }
    }
    beforeTest { descriptor ->
        logger.lifecycle('    ' + descriptor.getName())
    }

    systemProperty 'regtest', true
    systemProperty 'java.util.logging.config.file', "${project.projectDir}/src/integ/logging.properties"
    systemProperties ([ "omni.test.rpcTestUser": rpcTestUser,
                        "omni.test.rpcTestPassword": rpcTestPassword,
    ])
    include 'foundation/omni/cli/**'
}

def currencyID = 1

task getCoreConsensus(dependsOn: 'classes',  type: JavaExec) {
    main = 'foundation.omni.consensus.OmniCoreConsensusTool'
    args = [currencyID, 'build/mastercore_consensus.txt']
    classpath = sourceSets.main.runtimeClasspath
}

task getOmniConsensus(dependsOn: 'classes',  type: JavaExec) {
    main = 'foundation.omni.consensus.OmniwalletConsensusTool'
    args = [currencyID, 'build/omniwallet_consensus.txt']
    classpath = sourceSets.main.runtimeClasspath
}

task getConsensus(dependsOn: ['getCoreConsensus', 'getOmniConsensus']) {
    doLast {
        logger.info "Consensus files are in build/*_consensus.txt"
    }
}

task runOmniConsensusCLI(dependsOn: 'classes',  type: JavaExec) {
    main = 'foundation.omni.cli.ConsensusCLI'
    args = ['-regtest', '-rpcwait', '-rpcconnect=127.0.0.1', "-property=${currencyID}"]
    classpath = sourceSets.main.runtimeClasspath
}

